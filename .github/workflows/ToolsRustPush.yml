
name: rust

on: [ push ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    if : "startsWith( github.event.head_commit.message, '[build]' ) || startsWith( github.event.head_commit.message, 'Merge' )"
    strategy :
      fail-fast : false
      matrix :
        os : [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install latest stable toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --release
    - name: Run all tests
      run: cargo test
    - name: Run main module tests
      run: cargo test --manifest-path module/rust/wtools/Cargo.toml
    - name: Install latest nightly toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --release
    - name: Run all tests
      run: cargo test --all-features
    - name: Run main module tests without features
      run: cargo test --manifest-path module/rust/wtools/Cargo.toml --no-default-features
    - name: Run main module tests with all features
      run: cargo test --manifest-path module/rust/wtools/Cargo.toml --all-features

  build_fast:
    if : "!startsWith( github.event.head_commit.message, '[build]' ) && !startsWith( github.event.head_commit.message, 'Merge' )"
    strategy :
      fail-fast : false
      matrix :
        os : [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install latest stable toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build
    - name: Run all tests
      run: cargo test
