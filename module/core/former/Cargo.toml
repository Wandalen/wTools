[package]
name = "former"
version = "2.7.0"
edition = "2021"
authors = [
  "Kostiantyn Wandalen <wandalen@obox.systems>",
  "Dmytro Kryvoruchko <dmytro.kr@obox.systems>",
]
license = "MIT"
readme = "Readme.md"
documentation = "https://docs.rs/former"
repository = "https://github.com/Wandalen/wTools/tree/master/module/core/former"
homepage = "https://github.com/Wandalen/wTools/tree/master/module/core/former"
description = """
A flexible implementation of the Builder pattern supporting nested builders and collection-specific subformers.
"""
categories = [ "algorithms", "development-tools" ]
keywords = [ "fundamental", "general-purpose", "builder-pattern" ]

[lints]
workspace = true

[package.metadata.docs.rs]
features = [ "full" ]
all-features = false

[features]

no_std = [ "former_types/no_std", "collection_tools/no_std" ]
use_alloc = [ "no_std", "former_types/use_alloc", "collection_tools/use_alloc" ]

# no_std = [ "collection_tools/no_std" ]
# use_alloc = [ "no_std", "collection_tools/use_alloc" ]

default = [
  "enabled",
  "derive_former",
  "derive_components",
  "derive_component_from",
  "derive_component_assign",
  "derive_components_assign",
  "derive_from_components",
  "types_former",
  "types_component_assign",
]
full = [
  "enabled",
  "derive_former",
  "derive_components",
  "derive_component_from",
  "derive_component_assign",
  "derive_components_assign",
  "derive_from_components",
  "types_former",
  "types_component_assign",
]
enabled = [ "former_meta/enabled", "former_types/enabled" ]

derive_former = [ "former_meta/derive_former", "types_former" ]
derive_components = [ "former_meta/derive_components", "derive_component_assign", "derive_components_assign", "derive_component_from", "derive_from_components" ]
derive_component_assign = [ "former_meta/derive_component_assign", "types_component_assign" ]
derive_components_assign = [ "derive_component_assign", "former_meta/derive_components_assign" ]
derive_component_from = [ "former_meta/derive_component_from" ]
derive_from_components = [ "former_meta/derive_from_components" ]

types_former = [ "former_types/types_former" ]
types_component_assign = [ "former_types/types_component_assign" ]

[dependencies]
former_meta = { workspace = true }
former_types = { workspace = true }
# collection_tools = { workspace = true, features = [ "collection_constructors" ] }


[dev-dependencies]
test_tools = { workspace = true, features = [ "full" ] }
collection_tools = { workspace = true, features = [ "collection_constructors" ] }
