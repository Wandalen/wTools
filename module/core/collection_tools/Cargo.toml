[package]
name = "collection_tools"
version = "0.11.0"
edition = "2021"
authors = [
  "Kostiantyn Wandalen <wandalen@obox.systems>",
]
license = "MIT"
readme = "Readme.md"
documentation = "https://docs.rs/collection_tools"
repository = "https://github.com/Wandalen/wTools/tree/master/module/core/collection_tools"
homepage = "https://github.com/Wandalen/wTools/tree/master/module/core/collection_tools"
description = """
Collection of general purpose tools to manipulate collections( containers like Vec/HashMap/HashSet ).
"""
categories = [ "algorithms", "development-tools" ]
keywords = [ "fundamental", "general-purpose" ]


[lints]
workspace = true


[package.metadata.docs.rs]
features = [ "full" ]
all-features = false

[features]

no_std = [
  "test_tools/no_std",
]

use_alloc = [
  "no_std", # qqq : for Anton : why is that better? -- use_alloc means that we do not use std, but alloc and hashbrown
  "hashbrown",
  # "test_tools/use_alloc", // why is it needed? -- not needed, removed
]

default = [
  "enabled",
  # "reexports",
  "collection_constructors",
  "collection_into_constructors",
]

full = [
  "enabled",
  # "reexports",
  "collection_constructors",
  "collection_into_constructors",
]

enabled = []
# reexports = []

# Collection constructors, like `hmap!{ "key" => "val" }`
collection_constructors = []
# Collection constructors, using `into()` under the hood, like `into_hmap!( "key" => "val" )`
collection_into_constructors = []
# qqq : is this feature used? seems not. if yes, what is it responsible for? discuss -- not needed, removed

[dependencies]

## external
hashbrown = { version = "~0.14.3", optional = true, default-features = false, features = [ "default" ] }

[dev-dependencies]
test_tools = { workspace = true }
# former = { workspace = true }
