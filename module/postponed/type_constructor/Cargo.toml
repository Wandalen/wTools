[package]
name = "type_constructor"
version = "0.3.0"
edition = "2021"
authors = [
  "Kostiantyn Wandalen <wandalen@obox.systems>",
  "Dmytro Kryvoruchko <dmytro.kr@obox.systems>",
]
license = "MIT"
readme = "Readme.md"
documentation = "https://docs.rs/type_constructor"
repository = "https://github.com/Wandalen/wTools/tree/master/module/core/type_constructor"
homepage = "https://github.com/Wandalen/wTools/tree/master/module/core/type_constructor"
description = """
Fundamental data types and type constructors, like Single, Pair, Many.
"""
categories = [ "algorithms", "development-tools" ]
keywords = [ "fundamental", "general-purpose" ]

[lints]
workspace = true

[package.metadata.docs.rs]
features = [ "full" ]
all-features = false


include = [
  "/rust/impl/dt/type_constructor",
  "/Cargo.toml",
  "/Readme.md",
  "/License",
]

[features]
default = [
  "enabled",
  "many",
  "make",
  "vectorized_from",
]
full = [
  "enabled",
  "use_alloc",
  "many",
  "make",
  "vectorized_from",
]
no_std = []
use_alloc = [ "no_std" ]
enabled = []
many = []
make = []
vectorized_from = []

# [lib]
# name = "type_constructor"
# path = "src/dt/type_constructor/type_constructor_lib.rs"
#
# [[test]]
# name = "type_constructor_test"
# path = "tests/dt/type_constructor/type_constructor_tests.rs"
#
# [[test]]
# name = "type_constructor_smoke_test"
# path = "tests/_integration_test/smoke_test.rs"

# [[example]]
# name = "type_constructor_trivial"
# path = "examples/type_constructor_trivial/src/main.rs"
#
# [[example]]
# name = "type_constructor_derive_and_attr"
# path = "examples/type_constructor_derive_and_attr/src/main.rs"
#
# [[example]]
# name = "type_constructor_struct"
# path = "examples/type_constructor_struct/src/main.rs"
#
# [[example]]
# name = "type_constructor_parametrized_element"
# path = "examples/type_constructor_parametrized_element/src/main.rs"
#
# [[example]]
# name = "type_constructor_parametrized_tuple"
# path = "examples/type_constructor_parametrized_tuple/src/main.rs"
#
# [[example]]
# name = "type_constructor_multiple"
# path = "examples/type_constructor_multiple/src/main.rs"
# required-features = [ "many" ]
#
# [[example]]
# name = "type_constructor_without_macro"
# path = "examples/type_constructor_without_macro/src/main.rs"
# required-features = [ "many" ]
#
# [[example]]
# name = "type_constructor_pair"
# path = "examples/type_constructor_pair/src/main.rs"
#
# [[example]]
# name = "type_constructor_homopair"
# path = "examples/type_constructor_homopair/src/main.rs"
#
# [[example]]
# name = "type_constructor_many"
# path = "examples/type_constructor_many/src/main.rs"
# required-features = [ "many" ]

[dependencies]
derive_tools = { workspace = true, features = [ "enabled", "type_variadic_from", "derive_variadic_from" ] }
# inspect_type = { workspace = true }
# type_constructor_make_meta = { workspace = true }
# type_constructor_derive_pair_meta = { workspace = true }

[dev-dependencies]
test_tools = { workspace = true }
