[package]
name = "benchkit"
version = "0.1.0"
edition = "2021"
authors = [
  "Kostiantyn Wandalen <wandalen@obox.systems>",
]
license = "MIT"
readme = "readme.md"
documentation = "https://docs.rs/benchkit"
repository = "https://github.com/Wandalen/wTools/tree/master/module/move/benchkit"
homepage = "https://github.com/Wandalen/wTools/tree/master/module/move/benchkit"
description = """
Lightweight benchmarking toolkit focused on practical performance analysis and report generation.
Non-restrictive alternative to criterion, designed for easy integration and markdown report generation.
"""
categories = [ "development-tools", "testing" ]
keywords = [ "benchmark", "performance", "toolkit", "markdown", "reports" ]

[package.metadata.docs.rs]
features = [ "full" ]
all-features = false

# = features

[features]
default = [
  "enabled",
  "markdown_reports",
  "data_generators",
  "criterion_compat",
]

full = [
  "default", 
  "html_reports",
  "json_reports",
  "statistical_analysis",
  "comparative_analysis",
  "optimization_hints",
]

# Core functionality
enabled = []

# Report generation features
markdown_reports = [ "enabled", "dep:pulldown-cmark" ]
html_reports = [ "markdown_reports", "dep:tera" ]  
json_reports = [ "enabled", "dep:serde_json", "dep:chrono" ]

# Analysis features  
statistical_analysis = [ "enabled", "dep:statistical" ]
comparative_analysis = [ "enabled" ]
optimization_hints = [ "statistical_analysis" ]

# Utility features
data_generators = [ "enabled", "dep:rand" ]
criterion_compat = [ "enabled", "dep:criterion" ]  # Compatibility layer

# Environment features
no_std = []
use_alloc = [ "no_std" ]

# In workspace context, use:
# [lints]
# workspace = true

# For standalone development, define lints inline:
[lints.rust]
rust_2018_idioms = { level = "warn", priority = -1 }
future_incompatible = { level = "warn", priority = -1 }
missing_docs = "warn"
missing_debug_implementations = "warn"
unsafe-code = "deny"

[lints.clippy]
pedantic = { level = "warn", priority = -1 }
undocumented_unsafe_blocks = "deny"
std_instead_of_core = "warn"
doc_include_without_cfg = "warn"
missing_inline_in_public_items = "allow"

[dependencies]
# Core dependencies - always available
# Note: In workspace context, use:
# error_tools = { workspace = true, features = [ "enabled" ] }
# mod_interface = { workspace = true }
# For standalone development:
error_tools = { git = "https://github.com/Wandalen/wTools", branch = "alpha", features = [ "enabled" ] }

# Feature-gated dependencies  
pulldown-cmark = { version = "0.10", optional = true }
tera = { version = "1.19", optional = true }
serde_json = { version = "1.0", optional = true }
statistical = { version = "1.0", optional = true }
rand = { version = "0.8", optional = true }
criterion = { version = "0.5", optional = true }
chrono = { version = "0.4", features = ["serde"], optional = true }

[dev-dependencies]
# In workspace context, use:
# test_tools = { workspace = true }
# tempfile = { workspace = true }
# For standalone development:
tempfile = "3.0"

# Examples will be added as implementation progresses