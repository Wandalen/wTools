[workspace]
resolver = "2"
members = [
  "module/alias/*",
  "module/core/*",
  "module/move/*",
]
exclude = [
  "-*",
  "module/move/cargo_will",
  "module/alias/cargo_will",
  "module/blank/*",
  "module/postponed/*",
  "module/step/*",
  "module/move/unitore",
  "module/move/gspread",
  "module/move/optimization_tools",
  "module/move/refiner",
  "module/move/wplot",
  "module/move/plot_interface",
  "module/core/program_tools",
  "module/move/graphs_tools",
  "module/alias/fundamental_data_type",
  "module/alias/proc_macro_tools",
  "module/alias/multilayer",
  "module/alias/instance_of",
  "module/alias/werror",
  "module/core/wtools",
  "module/alias/wproc_macro",
  "module/alias/wtest_basic",
  "module/alias/wtest",
  "module/core/meta_tools",
  "module/core/for_each",
  "module/core/reflect_tools",
  "module/core/format_tools",
  "step",
]
# default-members = [ "module/core/wtools" ]

[workspace.metadata]
branches = [ "master", "alpha" ]
master_branch = "master"
workspace_name = "wTools"
repo_url = "https://github.com/Wandalen/wTools"
discord_url = "https://discord.gg/m3YfbXpUUY"

# [metadata.cargo-suppress-warnings]
# unused-manifest-key = true


[workspace.lints.rust]
# Denies non-idiomatic code for Rust 2018 edition.
rust_2018_idioms = { level = "warn", priority = -1 }
# Denies using features that may break in future Rust versions.
future_incompatible = { level = "warn", priority = -1 }
# Warns if public items lack documentation.
missing_docs = "warn"
# Warns for public types not implementing Debug.
missing_debug_implementations = "warn"
# Denies all unsafe code usage.
unsafe-code = "deny"

[workspace.lints.clippy]
# Denies pedantic lints, enforcing strict coding styles and conventions.
pedantic = { level = "warn", priority = -1 }
# Denies undocumented unsafe blocks.
undocumented_unsafe_blocks = "deny"
# Denies to prefer `core` over `std` when available, for `no_std` compatibility.
std_instead_of_core = "warn"
# Denies including files in documentation unconditionally.
doc_include_without_cfg = "warn"
# Allows missing inline in public items (too verbose).
missing_inline_in_public_items = "allow"

# exceptions

# Allows functions that are only called once.
single_call_fn = "allow"
# Allows forcing a function to always be inlined.
inline_always = "allow"
# Allows item names that repeat the module name (e.g., `mod user { struct User; }`).
module_name_repetitions = "allow"
# Allows using fully qualified paths instead of `use` statements.
absolute_paths = "allow"
# Allows wildcard imports (e.g., `use std::io::*;`).
wildcard_imports = "allow"
# Allow to prefer `alloc` over `std` when available, for `no_std` compatibility.
std_instead_of_alloc = "allow"
# Allow put definitions of struct at any point in functions.
items_after_statements = "allow"
# Allow precission loss, for example during conversion from i64 to f64
cast_precision_loss = "allow"
# Allows `pub use` statements.
pub_use = "allow"
# Allows the `?` operator.
question_mark_used = "allow"
# Allows implicit returns.
implicit_return = "allow"
# Allow ordering of fields in intuitive way.
arbitrary_source_item_ordering = "allow"
# Allow mod.rs files
mod_module_files = "allow"
# Allow missing docs for private items
missing_docs_in_private_items = "allow"


## top level

[workspace.dependencies.wtools]
version = "~0.2.0"
path = "module/core/wtools"
default-features = false

[workspace.dependencies.non_std]
version = "~0.1.4"
path = "module/alias/non_std"

[workspace.dependencies.std_tools]
version = "~0.1.4"
path = "module/alias/std_tools"

[workspace.dependencies.std_x]
version = "~0.1.4"
path = "module/alias/std_x"

[workspace.dependencies.unilang_parser]
version = "~0.10.0"
path = "module/move/unilang_parser" # Point to original unilang_parser


## data_type

[workspace.dependencies.data_type]
version = "~0.14.0"
path = "module/core/data_type"
default-features = false

[workspace.dependencies.type_constructor_meta]
version = "~0.2.0"
path = "module/core/type_constructor_meta"
default-features = false

[workspace.dependencies.type_constructor_make_meta]
version = "~0.2.0"
path = "module/core/type_constructor_make_meta"

[workspace.dependencies.type_constructor_derive_pair_meta]
version = "~0.1.0"
path = "module/core/type_constructor_derive_pair_meta"

[workspace.dependencies.interval_adapter]
version = "~0.36.0"
path = "module/core/interval_adapter"
default-features = false
# features = [ "enabled" ]

[workspace.dependencies.winterval]
version = "~0.3.0"
path = "module/alias/winterval"
default-features = false
# features = [ "enabled" ]

[workspace.dependencies.collection_tools]
version = "~0.24.0"
path = "module/core/collection_tools"
default-features = false


## derive

[workspace.dependencies.derive_tools]
version = "~0.45.0"
path = "module/core/derive_tools"
default-features = false
# features = [ "enabled" ]

[workspace.dependencies.derive_tools_meta]
version = "~0.44.0"
path = "module/core/derive_tools_meta"
default-features = false
# features = [ "enabled" ]

[workspace.dependencies.reflect_tools]
version = "~0.6.0"
path = "module/core/reflect_tools"
default-features = false
# features = [ "enabled" ]

[workspace.dependencies.reflect_tools_meta]
version = "~0.6.0"
path = "module/core/reflect_tools_meta"
default-features = false
# features = [ "enabled" ]

[workspace.dependencies.format_tools]
version = "~0.5.0"
path = "module/core/format_tools"
default-features = false
# features = [ "enabled" ]
# xxx : remove features, maybe

# [workspace.dependencies.format_tools]
# version = "~0.1.0"
# path = "module/core/format_tools"
# default-features = false
# features = [ "enabled" ]
# # xxx : remove features, maybe

[workspace.dependencies.type_constructor]
version = "~0.3.0"
path = "module/postponed/type_constructor"
default-features = false

[workspace.dependencies.fundamental_data_type]
version = "~0.2.0"
path = "module/alias/fundamental_data_type"
default-features = false

[workspace.dependencies.variadic_from]
version = "~0.39.0"
path = "module/core/variadic_from"
default-features = false
# features = [ "enabled" ]

[workspace.dependencies.variadic_from_meta]
version = "~0.10.0"
path = "module/core/variadic_from_meta"
default-features = false
# features = [ "enabled" ]

[workspace.dependencies.clone_dyn]
version = "~0.42.0"
path = "module/core/clone_dyn"
default-features = false
# features = [ "enabled" ]

[workspace.dependencies.clone_dyn_meta]
version = "~0.39.0"
path = "module/core/clone_dyn_meta"
# features = [ "enabled" ]

[workspace.dependencies.clone_dyn_types]
version = "~0.38.0"
path = "module/core/clone_dyn_types"
default-features = false
# features = [ "enabled" ]


## mem

[workspace.dependencies.mem_tools]
version = "~0.9.0"
path = "module/core/mem_tools"
default-features = false


## diagnostics

[workspace.dependencies.diagnostics_tools]
version = "~0.11.0"
path = "module/core/diagnostics_tools"
default-features = false


## iter

[workspace.dependencies.iter_tools]
version = "~0.36.0"
path = "module/core/iter_tools"
default-features = false


## meta

[workspace.dependencies.meta_tools]
version = "~0.12.0"
path = "module/core/meta_tools"
default-features = false

[workspace.dependencies.for_each]
version = "~0.10.0"
path = "module/core/for_each"
default-features = false

[workspace.dependencies.former]
version = "~2.27.0"
path = "module/core/former"
default-features = false

[workspace.dependencies.former_meta]
version = "~2.26.0"
path = "module/core/former_meta"
default-features = false

[workspace.dependencies.former_types]
version = "~2.23.0"
path = "module/core/former_types"
default-features = false

[workspace.dependencies.component_model]
version = "~0.5.0"
path = "module/core/component_model"
default-features = false

[workspace.dependencies.component_model_meta]
version = "~0.5.0"
path = "module/core/component_model_meta"
default-features = false

[workspace.dependencies.component_model_types]
version = "~0.10.0"
path = "module/core/component_model_types"
default-features = false

[workspace.dependencies.impls_index]
version = "~0.11.0"
path = "module/core/impls_index"
default-features = false

[workspace.dependencies.impls_index_meta]
version = "~0.13.0"
path = "module/core/impls_index_meta"

[workspace.dependencies.mod_interface]
version = "~0.43.0"
path = "module/core/mod_interface"
default-features = false

[workspace.dependencies.mod_interface_meta]
version = "~0.41.0"
path = "module/core/mod_interface_meta"
default-features = false

[workspace.dependencies.multilayer]
version = "~0.1.3"
path = "module/alias/multilayer"
default-features = false

# [workspace.dependencies.woptions]
# version = "~0.1.4"
# path = "module/core/woptions"
# default-features = false
#
# [workspace.dependencies.woptions_meta]
# version = "~0.1.4"
# path = "module/core/woptions_meta"
#
# [workspace.dependencies.woptions_runtime]
# version = "~0.1.4"
# path = "module/core/woptions_runtime"


## macro tools

[workspace.dependencies.macro_tools]
version = "~0.65.0"
path = "module/core/macro_tools"
default-features = false

[workspace.dependencies.proc_macro_tools]
version = "~0.2.0"
path = "module/alias/proc_macro_tools"
default-features = false

[workspace.dependencies.wproc_macro]
version = "~0.1.1"
path = "module/alias/wproc_macro"
default-features = false


## time

[workspace.dependencies.time_tools]
version = "~0.2.0"
path = "module/core/time_tools"
default-features = false


## typing

[workspace.dependencies.typing_tools]
version = "~0.11.0"
path = "module/core/typing_tools"
default-features = false

[workspace.dependencies.implements]
version = "~0.13.0"
path = "module/core/implements"
default-features = false

[workspace.dependencies.instance_of]
version = "~0.2.0"
path = "module/alias/instance_of"
default-features = false

[workspace.dependencies.inspect_type]
version = "~0.16.0"
path = "module/core/inspect_type"
default-features = false

[workspace.dependencies.is_slice]
version = "~0.14.0"
path = "module/core/is_slice"
default-features = false

[workspace.dependencies.asbytes]
version = "~0.2.0"
path = "module/core/asbytes"
default-features = false


## error

[workspace.dependencies.error_tools]
version = "~0.31.0"
path = "module/core/error_tools"
default-features = false

[workspace.dependencies.werror]
version = "~0.4.0"
path = "module/alias/werror"


## string tools

[workspace.dependencies.strs_tools]
version = "~0.28.0"
path = "module/core/strs_tools"
default-features = false

[workspace.dependencies.strs_tools_meta]
version = "~0.5.0"
path = "module/core/strs_tools_meta"
default-features = false

[workspace.dependencies.wstring_tools]
version = "~0.2.0"
path = "module/alias/wstring_tools"


## fs tools / path tools

[workspace.dependencies.fs_tools]
version = "~0.1.0"
path = "module/core/fs_tools"
default-features = false

[workspace.dependencies.file_tools]
version = "~0.1.0"
path = "module/alias/file_tools"
default-features = false

[workspace.dependencies.pth]
version = "~0.24.0"
path = "module/core/pth"
default-features = false

# [workspace.dependencies.proper_path_tools]
# version = "~0.15.0"
# path = "module/core/proper_path_tools"
# default-features = false


## process tools

[workspace.dependencies.process_tools]
version = "~0.14.0"
path = "module/core/process_tools"
default-features = false

# [workspace.dependencies.process_tools_published]
# package = "process_tools"
# version = "~0.9.0"
# default-features = false


## test

[workspace.dependencies.wtest]
version = "~0.4.0"
path = "module/alias/wtest"

[workspace.dependencies.test_tools]
version = "~0.16.0"
path = "module/core/test_tools"

# [workspace.dependencies.test_tools_stable]
# package = "test_tools"
# version = "~0.10.0"
# features = [ "full" ]

[workspace.dependencies.wtest_basic]
version = "~0.4.0"
path = "module/alias/wtest_basic"


## async

[workspace.dependencies.async_from]
version = "~0.2.0"
path = "module/core/async_from"

[workspace.dependencies.async_tools]
version = "~0.1.0"
path = "module/core/async_tools"

## graphs tools

[workspace.dependencies.graphs_tools]
version = "~0.3.0"
path = "module/move/graphs_tools"
default-features = false

[workspace.dependencies.automata_tools]
version = "~0.2.0"
path = "module/postponed/automata_tools"
default-features = false

[workspace.dependencies.wautomata]
version = "~0.2.0"
path = "module/postponed/wautomata"
default-features = false

## ca

[workspace.dependencies.wca]
version = "~0.27.0"
path = "module/move/wca"

## censor

[workspace.dependencies.wcensor]
version = "~0.1.1"
path = "module/move/wcensor"


## willbe

[workspace.dependencies.willbe]
version = "~0.23.0"
path = "module/move/willbe"


## lang

[workspace.dependencies.wlang]
version = "~0.1.0"
path = "module/move/wlang"


## publisher

[workspace.dependencies.wpublisher]
version = "~0.2.0"
path = "module/move/wpublisher_xxx"


## plot
[workspace.dependencies.wplot]
version = "~0.2.0"
path = "module/move/wplot"

[workspace.dependencies.plot_interface]
version = "~0.1.3"
path = "module/move/plot_interface"


## unsorted

[workspace.dependencies.sqlx_query]
version = "~0.2.0"
path = "module/move/sqlx_query"

[workspace.dependencies.deterministic_rand]
version = "~0.6.0"
path = "module/move/deterministic_rand"

[workspace.dependencies.crates_tools]
version = "~0.16.0"
path = "module/move/crates_tools"

[workspace.dependencies.assistant]
version = "~0.1.0"
path = "module/move/assistant"

[workspace.dependencies.llm_tools]
version = "~0.2.0"
path = "module/move/llm_tools"

[workspace.dependencies.benchkit]
version = "~0.4.0"
path = "module/move/benchkit"

## steps

[workspace.dependencies.procedural_macro]
version = "~0.1.0"
path = "module/template/template_procedural_macro"
default-features = true

[workspace.dependencies.procedural_macro_meta]
version = "~0.1.0"
path = "module/template/template_procedural_macro_meta"
default-features = true

[workspace.dependencies.procedural_macro_runtime]
version = "~0.1.0"
path = "module/template/template_procedural_macro_runtime"
default-features = true


## test experimental

[workspace.dependencies.test_experimental_a]
version = "~0.5.0"
path = "module/test/a"
default-features = true

[workspace.dependencies.test_experimental_b]
version = "~0.3.0"
path = "module/test/b"
default-features = true

[workspace.dependencies.test_experimental_c]
version = "~0.3.0"
path = "module/test/c"
default-features = true

## External

[workspace.dependencies.async-trait]
version = "0.1.83"

[workspace.dependencies.tokio]
version = "1.41.0"
default-features = false

# Note: anyhow and thiserror are included here ONLY for bootstrap builds
# of test_tools to avoid cyclic dependencies with error_tools.
# All other crates MUST use error_tools exclusively for error handling.
[workspace.dependencies.anyhow]
version = "~1.0"

[workspace.dependencies.thiserror]
version = "~1.0"

[workspace.dependencies.pretty_assertions]
version = "~1.4.0"
# features = []
# default-features = false

[workspace.dependencies.hashbrown]
version = "~0.14.3"
# optional = true
default-features = false
# features = [ "default" ]

[workspace.dependencies.paste]
version = "~1.0.14"
default-features = false

[workspace.dependencies.tempdir]
version = "~0.3.7"

[workspace.dependencies.rustversion]
version = "~1.0"

[workspace.dependencies.num-traits]
version = "~0.2"

[workspace.dependencies.rand]
version = "0.8.5"

[workspace.dependencies.rand_chacha]
version = "0.3.1"

[workspace.dependencies.rand_seeder]
version = "0.3.0"

[workspace.dependencies.sealed]
version = "0.5.0"

[workspace.dependencies.rayon]
version = "1.8.0"

[workspace.dependencies.trybuild]
version = "1.0.85"

[workspace.dependencies.futures-core]
version = "0.3.31"

[workspace.dependencies.futures-util]
version = "0.3.31"

[workspace.dependencies.regex]
version = "1.11.1"

[workspace.dependencies.serde]
version = "1.0.219"

[workspace.dependencies.serde_with]
version = "3.12.0"

[workspace.dependencies.serde_json]
version = "1.0.140"

[workspace.dependencies.serde_yaml]
version = "0.9.34"

[workspace.dependencies.bytemuck]
version = "1.21.0"

[workspace.dependencies.convert_case]
version = "0.6.0"
default-features = false

## External - parse

[workspace.dependencies.proc-macro2]
version = "~1.0.78"
default-features = false

[workspace.dependencies.quote]
version = "~1.0.35"
default-features = false

[workspace.dependencies.syn]
version = "~2.0.100"
default-features = false

[workspace.dependencies.const_format]
version = "~0.2.32"
default-features = false
# proc-macro2 = { version = "~1.0.78", default-features = false, features = [] }
# quote = { version = "~1.0.35", default-features = false, features = [] }
# syn = { version = "~2.0.52", default-features = false, features = [ "full", "extra-traits" ] } # qqq : xxx : optimize set of features

## External - SIMD optimization dependencies for strs_tools

[workspace.dependencies.lexical]
version = "7.0.4"

[workspace.dependencies.memchr]
version = "2.7"
default-features = false

[workspace.dependencies.aho-corasick]
version = "1.1"
default-features = false

[workspace.dependencies.bytecount]
version = "0.6"

## workspace_tools dependencies

[workspace.dependencies.tempfile]
version = "3.20.0"

[workspace.dependencies.glob]
version = "0.3.2"

[workspace.dependencies.cargo_metadata]
version = "0.18.1"

[workspace.dependencies.toml]
version = "0.8.23"

[workspace.dependencies.chrono]
version = "0.4.34"

[workspace.dependencies.criterion]
version = "0.5.1"

[workspace.dependencies.workspace_tools]
version = "~0.2.0"
path = "module/move/workspace_tools"
default-features = false

[patch.crates-io]
former_meta = { path = "module/core/former_meta" }
# const_format = { version = "0.2.32", default-features = false, features = [] }
