--- a/module/core/former_meta/src/derive_former/former_enum/struct_non_zero.rs
+++ b/module/core/former_meta/src/derive_former/former_enum/struct_non_zero.rs
@@ -210,6 +210,7 @@
                    }
                  }
              };
+             println!( "DEBUG: Storage Struct Tokens:\n{}", storage_struct_tokens );
              ctx.end_impls.push( storage_struct_tokens );
              // Push Default impl for Storage
              let storage_default_impl_tokens = {
@@ -239,6 +240,7 @@
                    }
                  }
              };
+             println!( "DEBUG: Storage Default Impl Tokens:\n{}", storage_default_impl_tokens );
              ctx.end_impls.push( storage_default_impl_tokens );
              // Push former::Storage impl
              let storage_trait_impl_tokens = {
@@ -268,6 +270,7 @@
                    }
                  }
              };
+             println!( "DEBUG: Storage Trait Impl Tokens:\n{}", storage_trait_impl_tokens );
              ctx.end_impls.push( storage_trait_impl_tokens );
              let preform_field_assignments = variant_field_info.iter().map( |f_info|
              {
@@ -309,6 +312,7 @@
                    }
                  }
              };
+             println!( "DEBUG: Storage Preform Impl Tokens:\n{}", storage_preform_impl_tokens );
              ctx.end_impls.push( storage_preform_impl_tokens );

              // --- Generate DefinitionTypes ---
@@ -340,6 +344,7 @@
                    }
                  }
              };
+             println!( "DEBUG: DefTypes Struct Tokens:\n{}", def_types_struct_tokens );
              ctx.end_impls.push( def_types_struct_tokens );
              // Push Default impl for DefinitionTypes
              let def_types_default_impl_tokens = {
@@ -369,6 +374,7 @@
                    }
                  }
              };
+             println!( "DEBUG: DefTypes Default Impl Tokens:\n{}", def_types_default_impl_tokens );
              ctx.end_impls.push( def_types_default_impl_tokens );
              // Push former::FormerDefinitionTypes impl
              let former_definition_types_impl_tokens = {
@@ -400,6 +406,7 @@
                    }
                  }
              };
+             println!( "DEBUG: DefTypes Trait Impl Tokens:\n{}", former_definition_types_impl_tokens );
              ctx.end_impls.push( former_definition_types_impl_tokens );
              // Push former::FormerMutator impl
              let former_mutator_impl_tokens = {
@@ -424,6 +431,7 @@
                    }
                  }
              };
+             println!( "DEBUG: FormerMutator Impl Tokens:\n{}", former_mutator_impl_tokens );
              ctx.end_impls.push( former_mutator_impl_tokens );

              // --- Generate Definition ---
@@ -451,6 +459,7 @@
                    }
                  }
              };
+             println!( "DEBUG: Def Struct Tokens:\n{}", def_struct_tokens );
              ctx.end_impls.push( def_struct_tokens );
              // Push Default impl for Definition
              let def_default_impl_tokens = {
@@ -480,6 +489,7 @@
                    }
                  }
              };
+             println!( "DEBUG: Def Default Impl Tokens:\n{}", def_default_impl_tokens );
              ctx.end_impls.push( def_default_impl_tokens );
              // Push former::FormerDefinition impl
              let former_definition_impl_tokens = {
@@ -511,6 +521,7 @@
                    }
                  }
              };
+             println!( "DEBUG: Def Trait Impl Tokens:\n{}", former_definition_impl_tokens );
              ctx.end_impls.push( former_definition_impl_tokens );

              // --- Generate Former Struct ---
@@ -556,6 +567,7 @@
                    }
                  }
              };
+             println!( "DEBUG: Former Struct Tokens:\n{}", former_struct_tokens );
              ctx.end_impls.push( former_struct_tokens );
              // --- Generate Former Impl + Setters ---
              let setters = variant_field_info.iter().map( |f_info|
@@ -611,6 +623,7 @@
                    }
                  }
              };
+             println!( "DEBUG: Former Impl Tokens:\n{}", former_impl_tokens );
              ctx.end_impls.push( former_impl_tokens );
              // --- Generate End Struct ---
              let phantom_field_type = macro_tools::phantom::tuple( &generics.params ); // FIX: Use qualified path and correct generics
@@ -637,6 +650,7 @@
                    }
                  }
              };
+             println!( "DEBUG: End Struct Tokens:\n{}", end_struct_tokens );
              ctx.end_impls.push( end_struct_tokens );
              // --- Generate End Impl ---
              let _tuple_indices = ( 0..ctx.variant_field_info.len() ).map( syn::Index::from );
@@ -696,6 +710,7 @@
                    }
                  }
              };
+             println!( "DEBUG: End Impl Tokens:\n{}", forming_end_impl_tokens );
              ctx.end_impls.push( forming_end_impl_tokens );
              // --- Generate Static Method ---
              // Push static method for Former
@@ -731,6 +746,7 @@
                    }
                  }
              };
+             println!( "DEBUG: Static Method Tokens:\n{}", static_method_tokens );
              ctx.methods.push( static_method_tokens );
              // --- Generate Standalone Constructor (Subform Struct(N)) ---
              if struct_attrs.standalone_constructors.value( false )
@@ -771,6 +787,7 @@
                          }
                      }
                  };
+                 println!( "DEBUG: Standalone Constructor Tokens:\n{}", standalone_constructor_tokens );
                  ctx.standalone_constructors.push( standalone_constructor_tokens );
              }
              // --- End Standalone Constructor ---
